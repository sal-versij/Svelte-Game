$grid-column-gap  : 1rem !default;
$grid-row-gap     : 1rem !default;
$grid-columns-min : 1 !default;
$grid-rows-min    : 1 !default;
$grid-columns-max : 8 !default;
$grid-rows-max    : 8 !default;
$grid-coord-min-x : 1 !default;
$grid-coord-min-y : 1 !default;
$grid-coord-max-x : 8 !default;
$grid-coord-max-y : 8 !default;
$grid-coord-min-w : 1 !default;
$grid-coord-min-h : 1 !default;
$grid-coord-max-w : 7 !default;
$grid-coord-max-h : 7 !default;

@mixin size-from-coord($x, $y) {
  @for $w from $grid-coord-min-w to $grid-coord-max-w {
    &.size-#{$w} {
      grid-column-end : #{$x + $w};
      grid-row-end    : #{$y + $w};
    }
    @for $h from $grid-coord-min-h to $grid-coord-max-h {
      &.size-#{$w}-#{$h} {
        grid-column-end : #{$x+$w};
        grid-row-end    : #{$y+$h};
      }
    }
  }
}

.grid {
  --grid-columns        : 1;
  --grid-rows           : 1;
  display               : grid;
  grid-template-columns : repeat(var(--grid-columns), 1fr);
  grid-template-rows    : repeat(var(--grid-rows), 1fr);
  column-gap            : $grid-column-gap;
  row-gap               : $grid-row-gap;

  @for $c from $grid-columns-min through $grid-columns-max {
    @for $r from $grid-rows-min through $grid-rows-max {
      &.size-#{$c}-#{$r} {
        --grid-columns : #{$c};
        --grid-rows    : #{$r};
      }
    }
  }

  .grid-element {
    @for $x from $grid-coord-min-x to $grid-coord-max-x {
      @for $y from $grid-coord-min-y to $grid-coord-max-y {
        &.coord-#{$x}-#{$y} {
          grid-column-start : #{$x};
          grid-row-start    : #{$y};
          @include size-from-coord($x, $y);
        }
      }
    }
  }
}